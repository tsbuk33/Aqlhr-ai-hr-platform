name: Module Features Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  audit-modules:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Detect audit script
        id: check_audit
        run: |
          if grep -q '"audit:modules"' package.json; then
            echo "has_audit=true" >> $GITHUB_OUTPUT
          else
            echo "has_audit=false" >> $GITHUB_OUTPUT
            echo '{}' > audit-manifest.json
          fi

      - name: Run module features audit
        if: steps.check_audit.outputs.has_audit == 'true'
        run: npm run -s audit:modules --if-present || echo "⚠️ Audit skipped or failed (non-blocking)."

      - name: Upload audit manifest
        if: hashFiles('audit-manifest.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: audit-manifest
          path: audit-manifest.json
          retention-days: 30

  test-components:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Detect unit test script
        id: check_tests
        run: |
          if grep -q '"test:coverage"' package.json; then
            echo "has_tests=true" >> $GITHUB_OUTPUT
          else
            echo "has_tests=false" >> $GITHUB_OUTPUT
          fi

      - name: Run unit tests
        if: steps.check_tests.outputs.has_tests == 'true'
        run: npm run -s test:coverage --if-present || echo "⚠️ Tests skipped or failed (non-blocking)."

      - name: Upload coverage reports
        if: hashFiles('coverage/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  test-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run -s build --if-present || echo "⚠️ Build failed (non-blocking)."

      - name: Detect Cypress specs
        id: check_cypress
        run: |
          if [ -d "cypress" ] && ls -1 cypress/e2e/**/*.* >/dev/null 2>&1; then
            echo "has_cypress=true" >> $GITHUB_OUTPUT
          else
            echo "has_cypress=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Cypress tests
        if: steps.check_cypress.outputs.has_cypress == 'true'
        continue-on-error: true
        uses: cypress-io/github-action@v6
        with:
          start: npm run preview
          wait-on: 'http://localhost:4173'
          wait-on-timeout: 180

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: [audit-modules, test-components, test-ui]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        run: npx vercel --token $VERCEL_TOKEN --scope $VERCEL_ORG_ID --prod --confirm --yes

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: [audit-modules, test-components, test-ui, deploy-vercel]
    if: failure()
    steps:
      - name: GitHub Log Notification
        run: |
          echo "❌ Workflow failed. Please check Actions logs for audit, tests, UI, or deployment errors."
