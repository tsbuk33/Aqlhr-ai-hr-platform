name: Preview Deployment Tests

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  wait-for-vercel:
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.vercel-preview.outputs.preview-url }}
    steps:
      - name: Wait for Vercel Preview
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        id: vercel-preview
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 300
          check_interval: 10

  test-preview:
    needs: wait-for-vercel
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run validation tests on preview
        env:
          CYPRESS_BASE_URL: ${{ needs.wait-for-vercel.outputs.preview-url }}
        run: |
          export AQLHR_TEST_URL="${{ needs.wait-for-vercel.outputs.preview-url }}"
          chmod +x ./scripts/run-parallel-validation.sh
          ./scripts/run-parallel-validation.sh --external-url

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: preview-test-reports
          path: reports/parallel-validation/

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'reports/parallel-validation/consolidated-report.json';
            
            let comment = `## 🔍 Preview Deployment Tests\n\n**Preview URL:** ${{ needs.wait-for-vercel.outputs.preview-url }}\n\n`;
            
            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              comment += `**Results:**
              - Total Tests: ${report.totalTests}
              - Passed: ${report.passed} ✅
              - Failed: ${report.failed} ${report.failed > 0 ? '❌' : ''}
              - Success Rate: ${report.successRate}%
              
              ${report.failed > 0 ? '⚠️ Some tests failed. Check the workflow artifacts for detailed reports.' : '🎉 All tests passed!'}`;
            } else {
              comment += '❌ Test reports not found. Check the workflow logs for errors.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });