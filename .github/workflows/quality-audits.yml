name: AqlHR Quality Audits & Compliance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * *'   # Daily at 8 AM UTC
    - cron: '0 2 * * *'   # Nightly at 2 AM UTC for drift detection

jobs:
  comprehensive-audit:
    name: Comprehensive Audit Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # ---------- Optional audits (won't fail pipeline) ----------
      - name: Run AI Inventory Audit
        id: ai_audit
        run: |
          echo "::group::AI Inventory Audit"
          npx tsx scripts/audit-ai-inventory.ts || echo "ai_audit_failed=true" >> $GITHUB_OUTPUT
          echo "::endgroup::"
        continue-on-error: true

      - name: Run Reliability Verification
        id: reliability_check
        run: |
          echo "::group::Reliability Verification"
          npx tsx scripts/verify-uptime.ts || echo "reliability_failed=true" >> $GITHUB_OUTPUT
          echo "::endgroup::"
        continue-on-error: true

      - name: Run Locale Compliance Audit
        id: locale_audit
        run: |
          echo "::group::Locale Compliance Audit"
          npx tsx scripts/audit-edge-locale.ts || echo "locale_failed=true" >> $GITHUB_OUTPUT
          echo "::endgroup::"
        continue-on-error: true

      # ---------- Report generation (best-effort) ----------
      - name: Generate Comprehensive Report
        run: |
          echo "::group::Comprehensive Report Generation"
          npx tsx scripts/run-comprehensive-audit.ts || true
          echo "::endgroup::"

      - name: Upload Audit Reports
        uses: actions/upload-artifact@v4
        with:
          name: aqlhr-audit-reports-${{ github.sha }}
          path: |
            docs/*AUDIT*.md
            docs/RELIABILITY_REPORT.md
            ai-inventory.json
            ai-inventory-results.json
            reliability-results.json
            locale-compliance-results.json
            *-results.json
          if-no-files-found: ignore
          retention-days: 30

      - name: Compute Status Badge Values
        run: |
          AI_FAIL="${{ steps.ai_audit.outputs.ai_audit_failed }}"
          REL_FAIL="${{ steps.reliability_check.outputs.reliability_failed }}"
          LOC_FAIL="${{ steps.locale_audit.outputs.locale_failed }}"
          if [[ "$AI_FAIL" != "true" && "$REL_FAIL" != "true" && "$LOC_FAIL" != "true" ]]; then
            echo "AUDIT_STATUS=passing" >> $GITHUB_ENV
            echo "BADGE_COLOR=brightgreen" >> $GITHUB_ENV
          else
            echo "AUDIT_STATUS=failing" >> $GITHUB_ENV
            echo "BADGE_COLOR=red" >> $GITHUB_ENV
          fi

      - name: Comment PR with Audit Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const readJson = (p) => fs.existsSync(p) ? JSON.parse(fs.readFileSync(p, 'utf8')) : {};
            const ai = readJson('ai-inventory-results.json');
            const rel = readJson('reliability-results.json');
            const loc = readJson('locale-compliance-results.json');

            const md = `
            | Audit Type | Status | Score/Grade | Details |
            |------------|--------|-------------|---------|
            | AI Inventory | ${process.env.AUDIT_STATUS==='passing' ? '✅ Passed' : (ai?.missing?.length>0?'❌ Failed':'⚠️ Unknown')} | ${ai.complianceScore ?? 'N/A'}% | ${ai.totalExpected ?? 0} expected / ${ai.totalFound ?? 0} found |
            | Reliability | ${rel?.availabilityScore ? '✅ Measured' : '⚠️ Not available'} | ${rel.availabilityScore ?? 'N/A'}/100 | Uptime: ${rel.metrics?.uptime ?? 'N/A'} |
            | Locale Compliance | ${loc?.complianceScore ? '✅ Measured' : '⚠️ Not available'} | ${loc.complianceScore ?? 'N/A'}% | Violations: ${loc.violationsCount ?? 0} |

            **Download artifacts:** run #${context.runNumber}.
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## 🤖 AqlHR Quality Audit\nStatus: **${process.env.AUDIT_STATUS}**\n\n${md}`
            });

      - name: Update README Badge (best-effort)
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          if grep -q "audit-status-" README.md 2>/dev/null; then
            sed -i "s/audit-status-[^-]*-[^)]*)/audit-status-${{ env.AUDIT_STATUS }}-${{ env.BADGE_COLOR }})/g" README.md || true
          fi

  security-audit:
    name: Security & Dependency Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: npm audit (non-blocking)
        run: |
          echo "::group::NPM Security Audit"
          npm ci
          npm audit --audit-level=moderate || echo "npm_audit_issues=true" >> $GITHUB_ENV
          echo "::endgroup::"
        continue-on-error: true

      - name: audit-ci (non-blocking)
        run: |
          echo "::group::Dependency Vulnerability Check"
          npx audit-ci --moderate || echo "dependency_vulnerabilities=true" >> $GITHUB_ENV
          echo "::endgroup::"
        continue-on-error: true

  performance-audit:
    name: Performance & Load Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install & Build
        run: |
          npm ci
          npm run build || true

      - name: Lighthouse CI (non-blocking)
        run: |
          npm i -g @lhci/cli
          lhci autorun || echo "lighthouse_audit_failed=true" >> $GITHUB_ENV
        continue-on-error: true

  notify-teams:
    name: Create Issue on Failures (no Slack)
    needs: [ comprehensive-audit, security-audit, performance-audit ]
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    steps:
      - name: Create GitHub Issue on audit failures
        uses: actions/github-script@v7
        with:
          script: |
            const title = `🚨 AqlHR Quality Audit Failures - ${new Date().toISOString().slice(0,10)}`;
            const body = `One or more audit jobs failed for **${context.repo.owner}/${context.repo.repo}**.

            **Workflow:** ${context.workflow}
            **Run:** ${context.runNumber}
            **Commit:** ${context.sha}

            Please review the artifacts/logs and address issues.`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
              labels: ['audit-failure','high-priority']
            });
