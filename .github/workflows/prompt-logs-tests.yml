name: Prompt Logs System Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/hooks/usePromptLogs.ts'
      - 'src/pages/PromptLogs.tsx'
      - 'src/components/CreatePromptLogDialog.tsx'
      - 'supabase/migrations/*prompt_logs*'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/hooks/usePromptLogs.ts'
      - 'src/pages/PromptLogs.tsx'
      - 'src/components/CreatePromptLogDialog.tsx'
      - 'supabase/migrations/*prompt_logs*'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund
      
      - name: Run prompt logs unit tests
        run: npm test -- --testPathPattern="prompt-logs|usePromptLogs"
      
      - name: Generate test coverage
        run: npm run test:coverage -- --testPathPattern="prompt-logs|usePromptLogs"
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: prompt-logs

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund
      
      - name: Run prompt logs system tests
        run: npx tsx scripts/test-prompt-logs-system.ts
        env:
          NODE_ENV: test

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund
      
      - name: Start application
        run: npm run dev &
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      
      - name: Wait for app to be ready
        run: npx wait-on http://localhost:5173
      
      - name: Run Cypress E2E tests
        run: npx cypress run --spec "cypress/e2e/prompt-logs.cy.ts"
        env:
          CYPRESS_baseUrl: http://localhost:5173

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund
      
      - name: Run RLS policy audit
        run: npx tsx scripts/security-tests/company-isolation.test.ts
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund
      
      - name: Start application
        run: npm run dev &
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      
      - name: Wait for app to be ready
        run: npx wait-on http://localhost:5173
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --upload.target=temporary-public-storage
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}